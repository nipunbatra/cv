name: Build and Deploy CV

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup TinyTeX
      uses: r-lib/actions/setup-tinytex@v2
    
    - name: Install packages
      run: tlmgr install sourcesanspro sourcecodepro fontspec xetex scalerel fancyhdr datetime comment fmtcount fontawesome wasysym xcolor wasy wasy-type1 microtype lastpage || true
    
    - name: Build CVs in parallel
      run: |
        set -e  # Exit on any error
        echo "Building CVs..."
        
        # First pass
        echo "First pass..."
        xelatex -interaction=nonstopmode cv.tex &
        FULL_PID=$!
        xelatex -interaction=nonstopmode cv-short.tex &
        SHORT_PID=$!
        
        # Wait for both and check exit codes
        wait $FULL_PID
        FULL_EXIT=$?
        wait $SHORT_PID  
        SHORT_EXIT=$?
        
        if [ $FULL_EXIT -ne 0 ] || [ $SHORT_EXIT -ne 0 ]; then
          echo "First pass failed. Exit codes: Full=$FULL_EXIT, Short=$SHORT_EXIT"
          exit 1
        fi
        
        # Second pass to resolve references (page numbers, etc.)
        echo "Second pass for references..."
        xelatex -interaction=nonstopmode cv.tex &
        FULL_PID=$!
        xelatex -interaction=nonstopmode cv-short.tex &
        SHORT_PID=$!
        
        wait $FULL_PID
        FULL_EXIT=$?
        wait $SHORT_PID
        SHORT_EXIT=$?
        
        if [ $FULL_EXIT -ne 0 ] || [ $SHORT_EXIT -ne 0 ]; then
          echo "Second pass failed. Exit codes: Full=$FULL_EXIT, Short=$SHORT_EXIT"
          exit 1
        fi
        
        echo "Build successful!"
    
    - name: Commit and push PDFs
      if: github.ref == 'refs/heads/master'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add cv.pdf cv-short.pdf
        git diff --staged --quiet || git commit -m "ðŸ¤– Update PDFs [skip ci]"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload build artifacts (logs and PDFs)
      uses: actions/upload-artifact@v4
      if: always()  # Upload even on failure
      with:
        name: build-artifacts
        path: |
          *.pdf
          *.log
          *.aux
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'
    
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/master'
      id: deployment
      uses: actions/deploy-pages@v4